# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'non_layout_itemcode.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from form_mysql.layout_cameratab import Ui_MainWindow as Ui_CameraTab
from form_mysql.layout_modeltab import Ui_MainWindow as Ui_ModelTab
from PyQt5.QtWidgets import QMessageBox
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import (QApplication, QMainWindow, QWidget, QLabel, QLineEdit, 
                             QVBoxLayout, QHBoxLayout, QGridLayout, QPushButton, 
                             QFrame, QComboBox, QScrollArea, QMessageBox, QSpinBox,
                             QTabWidget, QTableWidget, QTableWidgetItem, QHeaderView,
                             QGroupBox)
from PyQt5.QtCore import Qt, QSize
from PyQt5.QtGui import QFont, QIcon, QPixmap
from form_mysql.mysql_connnector import Ui_MainWindow as Ui_MySQLConnector
import mysql.connector
from mysql.connector import Error
from form_mysql.mysql_insert import Connect2Mysql
from form_mysql.from_confirm_dataset import Ui_MainWindow as FormConfirmTable
from dual_tab_widget import intermediate_layer
import sys
class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("Management Dataset Device")
        MainWindow.resize(878, 718)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.heading = QtWidgets.QLabel(self.centralwidget)
        self.heading.setMaximumSize(QtCore.QSize(16777215, 40))
        font = QtGui.QFont()
        font.setFamily("Malgun Gothic")
        font.setPointSize(20)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.heading.setFont(font)
        self.heading.setFrameShape(QtWidgets.QFrame.Box)
        self.heading.setFrameShadow(QtWidgets.QFrame.Raised)
        self.heading.setTextFormat(QtCore.Qt.RichText)
        self.heading.setAlignment(QtCore.Qt.AlignCenter)
        self.heading.setObjectName("heading")
        self.gridLayout_4.addWidget(self.heading, 0, 0, 1, 1)
        self.frame_namedevice_itemcode = QtWidgets.QFrame(self.centralwidget)
        self.frame_namedevice_itemcode.setMaximumSize(QtCore.QSize(16777215, 200))
        font = QtGui.QFont()
        font.setFamily("Malgun Gothic")
        font.setPointSize(11)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.frame_namedevice_itemcode.setFont(font)
        self.frame_namedevice_itemcode.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.frame_namedevice_itemcode.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.frame_namedevice_itemcode.setObjectName("frame_namedevice_itemcode")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.frame_namedevice_itemcode)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.label_name_device = QtWidgets.QLabel(self.frame_namedevice_itemcode)
        font = QtGui.QFont()
        font.setFamily("Malgun Gothic")
        font.setPointSize(11)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.label_name_device.setFont(font)
        self.label_name_device.setObjectName("label_name_device")
        self.gridLayout_2.addWidget(self.label_name_device, 0, 0, 1, 1)
        self.lineEdit_name_devic = QtWidgets.QLineEdit(self.frame_namedevice_itemcode)
        self.lineEdit_name_devic.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Malgun Gothic")
        font.setPointSize(11)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.lineEdit_name_devic.setFont(font)
        self.lineEdit_name_devic.setObjectName("lineEdit_name_devic")
        self.gridLayout_2.addWidget(self.lineEdit_name_devic, 0, 1, 1, 1)
        self.label_quanty_itemcode = QtWidgets.QLabel(self.frame_namedevice_itemcode)
        font = QtGui.QFont()
        font.setFamily("Malgun Gothic")
        font.setPointSize(11)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.label_quanty_itemcode.setFont(font)
        self.label_quanty_itemcode.setObjectName("label_quanty_itemcode")
        self.gridLayout_2.addWidget(self.label_quanty_itemcode, 1, 0, 1, 1)
        self.spinBox_num_itemcode = QtWidgets.QSpinBox(self.frame_namedevice_itemcode)
        self.spinBox_num_itemcode.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Malgun Gothic")
        font.setPointSize(11)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.spinBox_num_itemcode.setFont(font)
        self.spinBox_num_itemcode.setValue(1)
        self.spinBox_num_itemcode.setDisabled(True)
        self.spinBox_num_itemcode.setObjectName("spinBox_num_itemcode")
        self.spinBox_num_itemcode.valueChanged.connect(self.update_quanty_codes)
        self.gridLayout_2.addWidget(self.spinBox_num_itemcode, 1, 1, 1, 1)
        self.connection = QtWidgets.QPushButton(self.frame_namedevice_itemcode)
        self.connection.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../../Downloads/add.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.connection.setIcon(icon)
        self.connection.setObjectName("connection")
        self.connection.setToolTip("Thiết lập kết nối đến MySQL")
        self.gridLayout_2.addWidget(self.connection, 0, 3, 1, 1)
      
        self.pushButton = QtWidgets.QPushButton(self.frame_namedevice_itemcode)
        self.pushButton.setObjectName("pushButton")

        self.pushButton.setDisabled(True)
        self.gridLayout_2.addWidget(self.pushButton, 0, 2, 1, 1)
        self.gridLayout_4.addWidget(self.frame_namedevice_itemcode, 1, 0, 1, 1)
        self.tab_item_code = QtWidgets.QTabWidget(self.centralwidget)
        self.tab_item_code.setMaximumSize(QtCore.QSize(16777215, 530))
        font = QtGui.QFont()
        font.setFamily("Malgun Gothic")
        font.setPointSize(11)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(50)
        self.tab_item_code.setFont(font)
        self.tab_item_code.setTabPosition(QtWidgets.QTabWidget.North)
        self.tab_item_code.setObjectName("tab_item_code")
        self.gridLayout_4.addWidget(self.tab_item_code, 2, 0, 1, 1)
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("Malgun Gothic")
        font.setPointSize(11)
        self.frame_2.setFont(font)
        self.frame_2.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame_2)
        self.horizontalLayout.setObjectName("horizontalLayout")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("../../Downloads/diskette (2).png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_2 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_2.setMaximumSize(QtCore.QSize(16777215, 30))
        self.pushButton_2.setIcon(icon1)
        font = QtGui.QFont()
        font.setFamily("Malgun Gothic")
        font.setPointSize(11)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout.addWidget(self.pushButton_2)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("../../Downloads/view.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_3 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_3.setIcon(icon2)
        self.pushButton_3.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Malgun Gothic")
        font.setPointSize(11)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setObjectName("pushButton_3")
        self.horizontalLayout.addWidget(self.pushButton_3)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("../../Downloads/trash-bin.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_4 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_4.setIcon(icon3)
        self.pushButton_4.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Malgun Gothic")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton_4.setFont(font)
        self.pushButton_4.setObjectName("pushButton_4")
        self.horizontalLayout.addWidget(self.pushButton_4)

        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("../../Downloads/trash-bin.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_5 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_5.setIcon(icon4)
        self.pushButton_5.setMaximumSize(QtCore.QSize(16777215, 30))
        font = QtGui.QFont()
        font.setFamily("Malgun Gothic")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.pushButton_5.setFont(font)
        self.pushButton_5.setObjectName("pushButton_5")
        self.horizontalLayout.addWidget(self.pushButton_5)

        self.gridLayout_4.addWidget(self.frame_2, 3, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 878, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tab_item_code.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.update_quanty_codes()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("Management Dataset Device", "Management Dataset Device"))
        self.heading.setText(_translate("MainWindow", "SETUP DATASET CONFIGURATION"))
        self.label_name_device.setText(_translate("MainWindow", "Tên thiết bị :"))
        self.label_quanty_itemcode.setText(_translate("MainWindow", "Số lượng mã hàng :"))
        self.pushButton.setText(_translate("MainWindow", "Xác nhận"))
        self.pushButton_2.setText(_translate("MainWindow", "Lưu cấu hình"))
        self.pushButton_3.setText(_translate("MainWindow", "Xem trước"))
        self.pushButton_4.setText(_translate("MainWindow", "Xóa tùy chọn"))
        self.pushButton_5.setText(_translate("MainWindow", " Cập nhật và Thoát"))

    def update_quanty_codes(self):
        self.tab_item_code.clear()
        self.tab_windows = [] 
        self.tab_uis = []    
        for i in range(self.spinBox_num_itemcode.value()):
            self.core_ui = QtWidgets.QMainWindow()
            self.tab_itemcode_1 = Ui_CameraTab()
            self.tab_windows.append(self.core_ui)
            self.tab_uis.append(self.tab_itemcode_1)
            self.tab_itemcode_1.setupUi(self.core_ui)
            self.tab_item_code.addTab(self.core_ui, f'No.{i+1}')

    def closeEvent(self,event):
        event.close()
    
class QTableData:
    def __init__(self, ui):
        self.ui = ui
        self.cfm = False
        
    def save_config(self):
        self.save_data()
        self.cfm = True

    def save_data(self):
        self.list_item_code = {} 
        if not self.ui.lineEdit_name_devic.text():
            QMessageBox.warning(None, "Thông báo", "Vui lòng nhập tên máy!")
            return
        
        if not self.ui.tab_itemcode_1.lineEdit_name_itemcod.text():
            QMessageBox.warning(None, "Thông báo", "Vui lòng nhập tên mã hàng!")
            return
        
        for form in self.ui.tab_uis:
            product_data = form.take_data()
            self.list_item_code[product_data["product_codes"]] = product_data["camera_tabs"]
            if product_data["product_codes"]: 
                self.list_item_code[product_data["product_codes"]] = {
                    "device_name": self.ui.lineEdit_name_devic.text(),
                    "camera_tabs": product_data["camera_tabs"]
                }
            
        print("Dữ liệu đã lưu:", self.list_item_code)
        
        QMessageBox.information(None, "Thông báo", "Lưu thông tin thành công!")

    def view_data_from_ui(self):
        if not self.cfm:
            QMessageBox.warning(None, "Thông báo", "Vui lòng lưu cấu hình trước khi xem trước!")
            return
        self.cfm = False
        self.data_window = QMainWindow()
        self.data_window.setWindowTitle("Thông tin chi tiết")
        self.data_window.setMinimumSize(878, 718)
        
        central_widget = QWidget()
        layout = QVBoxLayout(central_widget)
   
        machine_info = QLabel(f"Thông tin máy: {self.ui.lineEdit_name_devic.text()}")
        machine_info.setFont(QFont("Arial", 14, QFont.Bold))
        machine_info.setAlignment(Qt.AlignCenter)
        layout.addWidget(machine_info)
        tab_widget = QTabWidget()
        
        for i, form in enumerate(self.ui.tab_uis):
            product_data = form.take_data()
            if product_data['product_codes'] == "":
                QMessageBox.information(None, "Thông báo", "Không có item code được chọn!")
                return
            else:
                product_tab = QWidget()
                product_layout = QVBoxLayout(product_tab)
                product_title = QLabel(f"Mã hàng: {product_data['product_codes']}")
                product_title.setFont(QFont("Arial", 12, QFont.Bold))
                product_layout.addWidget(product_title)
                table = QTableWidget()
                table.setRowCount(len(product_data["camera_tabs"]))
                table.setColumnCount(6)
                table.setHorizontalHeaderLabels(["No.","Camera", "Serial", "Địa chỉ IP", "Cổng kết nối", "Số lượng model"])
                for i in range(table.columnCount()):
                    table.horizontalHeader().setSectionResizeMode(i, QHeaderView.Stretch)
                table.verticalHeader().setVisible(False)
                table.setGeometry(QtCore.QRect(10, 10, 1181, 951))
                for row, camera_data in enumerate(product_data["camera_tabs"]):
                    table.setItem(row, 0, QTableWidgetItem(f'Camera {str(row + 1)}'))
                    table.setItem(row, 1, QTableWidgetItem(camera_data["camera_type"]))
                    table.setItem(row, 2, QTableWidgetItem(camera_data["serial"]))
                    table.setItem(row, 3, QTableWidgetItem(camera_data["ip_address"]))
                    table.setItem(row, 4, QTableWidgetItem(camera_data["port"]))
                    table.setItem(row, 5, QTableWidgetItem(str((camera_data["model_count"]))))
                product_layout.addWidget(table)
                tab_widget.addTab(product_tab, product_data["product_codes"])
            layout.addWidget(tab_widget)
        self.confirm_insert = QPushButton("Xác nhận")
        close_button = QPushButton("Close")
        close_button.clicked.connect(self.data_window.close)
        layout.addWidget(close_button, alignment=Qt.AlignRight)
        layout.addWidget(self.confirm_insert, alignment=Qt.AlignRight)
        self.data_window.setCentralWidget(central_widget)
        self.data_window.show()

    def view_data_from_dict(self):
        if not hasattr(self, 'list_item_code') or not self.list_item_code:
            QMessageBox.warning(None, "Thông báo", "Không có dữ liệu thiết bị để hiển thị!")
            return

        self.data_window = QMainWindow()
        self.data_window.setWindowTitle("Thông tin chi tiết")
        self.data_window.setMinimumSize(878, 718)

        central_widget = QWidget()
        layout = QVBoxLayout(central_widget)

        machine_info = QLabel("Thông tin thiết bị")
        machine_info.setFont(QFont("Arial", 14, QFont.Weight.Bold))
        machine_info.setAlignment(Qt.AlignmentFlag.AlignCenter)
        layout.addWidget(machine_info)

        tab_widget = QTabWidget()

        for device_name, device_data in self.list_item_code.items():
            product_tab = QWidget()
            product_layout = QVBoxLayout(product_tab)
            product_title = QLabel(f"Mã hàng: {device_name}")
            product_title.setFont(QFont("Arial", 12, QFont.Weight.Bold))
            product_layout.addWidget(product_title)

            table = QTableWidget()
            camera_list = device_data.get("camera_tabs", [])
            table.setRowCount(len(camera_list))
            table.setColumnCount(6)
            table.setHorizontalHeaderLabels(["No.", "Camera", "Serial", "Địa chỉ IP", "Cổng kết nối", "Số lượng model"])
            
            for i in range(table.columnCount()):
                table.horizontalHeader().setSectionResizeMode(i, QHeaderView.ResizeMode.Stretch)
            table.verticalHeader().setVisible(False)

            for row, camera_data in enumerate(camera_list):
                table.setItem(row, 0, QTableWidgetItem(f'Camera {str(row + 1)}'))
                table.setItem(row, 1, QTableWidgetItem(camera_data.get("camera_type", "N/A")))
                table.setItem(row, 2, QTableWidgetItem(camera_data.get("serial", "N/A")))
                table.setItem(row, 3, QTableWidgetItem(camera_data.get("ip_address", "N/A")))
                table.setItem(row, 4, QTableWidgetItem(camera_data.get("port", "N/A")))
                table.setItem(row, 5, QTableWidgetItem(str(camera_data.get("model_count", "N/A"))))
            
            product_layout.addWidget(table)
            tab_widget.addTab(product_tab, device_name)
        
        layout.addWidget(tab_widget)

        confirm_insert = QPushButton("Xác nhận")
        confirm_insert.clicked.connect(self.connectnsert_data)
        close_button = QPushButton("Close")
        close_button.clicked.connect(self.data_window.close)
        
        layout.addWidget(close_button, alignment=Qt.AlignmentFlag.AlignRight)
        layout.addWidget(confirm_insert, alignment=Qt.AlignmentFlag.AlignRight)
        
        self.data_window.setCentralWidget(central_widget)
        self.data_window.show()


    def clear_data(self):
        reply = QMessageBox.question(
            None, "Xác nhận", "Bạn có chắc muốn xóa tất cả dữ liệu?",
            QMessageBox.Yes | QMessageBox.No, QMessageBox.No
        )
        if reply == QMessageBox.Yes:
            self.ui.lineEdit_name_devic.clear()
            self.ui.spinBox_num_itemcode.setValue(1)
            self.ui.update_quanty_codes()
            QMessageBox.information(None, "Thông báo", "Đã xóa tất cả dữ liệu!")

    def insert_data(self):
       pass


class Pyuic5():
    def __init__(self,ui_db):
        self.ui_db = ui_db

        self.MainWindow = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self.MainWindow)

        self.mysqlWindow = QtWidgets.QMainWindow()
        self.mysqlUi = Ui_MySQLConnector()
        self.mysqlUi.setupUi(self.mysqlWindow)

        self.formmysqlWindow = QtWidgets.QMainWindow()
        self.form_mysql = FormConfirmTable(self.ui)
        self.form_mysql.setupUi(self.formmysqlWindow)

        self.connect = Connect2Mysql(self.mysqlUi, self.form_mysql, self.ui)

        self.mysqlUi.pushButton_testconnection.clicked.connect(lambda _ , u=self.connect: u.connect_to_mysql())
        self.ui.connection.clicked.connect(lambda _ , u=self.mysqlWindow: u.show())
        self.ui.pushButton_2.clicked.connect(self.form_mysql.save_config)
        self.ui.pushButton_3.clicked.connect(self.formmysqlWindow.show)
        self.ui.pushButton_4.clicked.connect(self.form_mysql.clear_data)
        self.ui.pushButton.clicked.connect(self.connect.create_item_code_device)
        self.form_mysql.confirm_btn.clicked.connect(self.connect.commitment)
        self.ui.pushButton_5.clicked.connect(lambda:self.query_device(self.MainWindow))
        self.MainWindow.show()

    def query_device(self,event):
        db_submenu = QtWidgets.QMenu()
        self.cursor = self.connect.connection.cursor()
        self.cursor.execute("SHOW DATABASES") 
        databases = self.cursor.fetchall()
        for db_name in databases:
            db_name_str = db_name[0]
            QtWidgets.QAction(db_name_str, db_submenu)
            self.cursor.execute(f"USE {db_name_str}")
            self.cursor.execute(f"SHOW TABLES")
            tables = self.cursor.fetchall()
            for table in tables:
                if 'items_code' == table[0]:
                    self.cursor.execute(f"SELECT name_line_code FROM ITEMS_CODE")
                    item_codes = self.cursor.fetchall()
                    item_code_submenu = QtWidgets.QMenu(f"{db_name_str.upper()}", db_submenu)
                    for item_code in item_codes:
                        item_code_action = QtWidgets.QAction(item_code[0], item_code_submenu)
                        item_code_action.triggered.connect(lambda checked=False, code=item_code[0],db=db_name[0]: self.open_pyuic6(code,db))
                        item_code_submenu.addAction(item_code_action)
                    db_submenu.addMenu(item_code_submenu)
        self.ui_db.actionDevice_Name.setMenu(db_submenu) 
        self.ui.closeEvent(event)

    # def select_database(self,code,db):
    #     self.cursor.execute(f"USE {db}")
    #     self.cursor.execute("""
    #         SELECT id FROM ITEMS_CODE 
    #         WHERE name_line_code = %s
    #     """, (code,))
    #     result = self.cursor.fetchone()[0]
    #     print(result)
    #     # self.cursor.execute("""
    #     #     SELECT * FROM NUMS_CAMERA 
    #     #     WHERE item_code_id = %s
    #     # """, (result,))
    #     # records = self.cursor.fetchall()
    #     # for record in records:
    #     #     print(record[0])
    #     # self.open_pyuic6(record)

    def open_pyuic6(self,i_code,db):
        self.pyuic6_instance = intermediate_layer(i_code,db,self.connect)

        
# if __name__ == "__main__":
#     show()
#     import sys
#     app = QtWidgets.QApplication(sys.argv)
#     app.setStyle('Fusion')
#     MainWindow = QtWidgets.QMainWindow()
#     ui = Ui_MainWindow()
#     ui.setupUi(MainWindow)
#     QTableDataq = QTableData(ui)
#     mysqlWindow = QtWidgets.QMainWindow()
#     mysqlUi = Ui_MySQLConnector()
#     mysqlUi.setupUi(mysqlWindow)
#     formmysqlWindow = QtWidgets.QMainWindow()
#     form_mysql = tbl_from(ui)
#     form_mysql.setupUi(formmysqlWindow)
#     i = Connect2Mysql(mysqlUi,form_mysql,ui)
#     mysqlUi.pushButton_testconnection.clicked.connect(i.connect_to_mysql)
#     ui.connection.clicked.connect(mysqlWindow.show)
#     ui.pushButton_2.clicked.connect(form_mysql.save_config)
#     ui.pushButton_3.clicked.connect(formmysqlWindow.show)
#     ui.pushButton_4.clicked.connect(form_mysql.clear_data)
#     ui.pushButton.clicked.connect(i.create_item_code_device)
#     form_mysql.confirm_btn.clicked.connect(i.commitment)
#     MainWindow.show()
#     sys.exit(app.exec_())

 


