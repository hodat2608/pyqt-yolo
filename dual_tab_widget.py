# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'dual_tab_widget.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from layout_congfiguration_model import Ui_MainWindow  as uicmin
from process import process
import sys

class Ui_MainWindow(object):

    def __init__(self,i_code,db,connect_db): 
        self.ui_child  = None
        self.i_code = i_code
        self.db = db
        self.connect_db = connect_db
        self.cursor = self.connect_db.connection.cursor()

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1879, 1004)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setMovable(True)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.tab)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.tabWidget_2 = QtWidgets.QTabWidget(self.tab)
        self.tabWidget_2.setObjectName("tabWidget_2")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.tabWidget_2.addTab(self.tab_3, "")
        self.tab_4 = QtWidgets.QWidget()
        self.tab_4.setObjectName("tab_4")
        self.tabWidget_2.addTab(self.tab_4, "")
        self.horizontalLayout.addWidget(self.tabWidget_2)
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.tab_2)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.tabWidget_3 = QtWidgets.QTabWidget(self.tab_2)
        self.tabWidget_3.setObjectName("tabWidget_3")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.tabWidget_3.addTab(self.tab_5, "")
        self.tab_6 = QtWidgets.QWidget()
        self.tab_6.setObjectName("tab_6")
        self.tabWidget_3.addTab(self.tab_6, "")
        self.horizontalLayout_3.addWidget(self.tabWidget_3)
        self.tabWidget.addTab(self.tab_2, "")
        self.horizontalLayout_2.addWidget(self.tabWidget)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1879, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(1)
        self.tabWidget_2.setCurrentIndex(0)
        self.tabWidget_3.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.select_database()
        # self.update_product_codes(2)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_3), _translate("MainWindow", "model 1"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_4), _translate("MainWindow", "model 2"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "camera 1 "))
        self.tabWidget_3.setTabText(self.tabWidget_3.indexOf(self.tab_5), _translate("MainWindow", "model 1"))
        self.tabWidget_3.setTabText(self.tabWidget_3.indexOf(self.tab_6), _translate("MainWindow", "model 2"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "camera 2"))

    def select_database(self):
        self.ui_instances = {}
        self.tabWidget_2.clear()
        self.tabWidget.clear()
        self.product_code_forms = []
        self.cursor.execute(f"USE {self.db}")
        self.cursor.execute("""
            SELECT id FROM ITEMS_CODE 
            WHERE name_line_code = %s
        """, (self.i_code,))
        result = self.cursor.fetchone()[0]
        self.cursor.execute("""
            SELECT * FROM NUMS_CAMERA 
            WHERE item_code_id = %s
        """, (result,))
        records = self.cursor.fetchall()
        for index,record in enumerate(records):
            tab = QtWidgets.QWidget()
            horizontalLayout = QtWidgets.QHBoxLayout(tab)
            tabWidget_inner = QtWidgets.QTabWidget(tab)
            horizontalLayout.addWidget(tabWidget_inner)
            self.tabWidget.addTab(tab, f"Camera {record[1]}")
            self.tabWidget_2 = tabWidget_inner
            self.cursor.execute("""
                SELECT * FROM NUMS_MODEL
                WHERE camera_id = %s
            """, (record[0],))
            num_model = self.cursor.fetchall()
            for model_index in range(len(num_model)):
                new_tab = QtWidgets.QMainWindow()
                self.ui_child = uicmin()
                uic_process = process(self.ui_child) 
                self.ui_child.setupUi(new_tab)  
                # ðŸ”¹ LÆ°u instance cá»§a tá»«ng model vÃ o dict
                self.ui_instances[(record[1], model_index + 1)] = self.ui_child
                # ðŸ”¹ GÃ¡n sá»± kiá»‡n
                self.ui_child.pushButton.clicked.connect(lambda _, u=uic_process: u.browse_file())
                self.ui_child.pushButton_2.clicked.connect(lambda _, u=uic_process: u.load_model())
                self.ui_child.pushButton_6.clicked.connect(lambda _, u=uic_process: u.save_data())
                self.ui_child.pushButton_5.clicked.connect(lambda _, u=uic_process: u.event_clock(1, 1, self.dict, self.tabWidget, self.ui_instances))
                self.tabWidget_2.addTab(new_tab, f"Model {model_index + 1}")
                self.product_code_forms.append(new_tab)

    # def update_product_codes(self, count):
    #     self.ui_instances = {}
    #     self.tabWidget_2.clear()
    #     self.tabWidget.clear()
    #     self.product_code_forms = []
    #     print(self.dict)
    #     for i, j in enumerate(self.dict):
    #         tab = QtWidgets.QWidget()
    #         horizontalLayout = QtWidgets.QHBoxLayout(tab)
    #         tabWidget_inner = QtWidgets.QTabWidget(tab)
    #         horizontalLayout.addWidget(tabWidget_inner)
    #         self.tabWidget.addTab(tab, f"Camera {j[1]}")
    #         self.tabWidget_2 = tabWidget_inner

    #         for model_index in range(j[6]):
    #             new_tab = QtWidgets.QMainWindow()
    #             self.ui_child = uicmin()
    #             uic_process = process(self.ui_child) 
    #             self.ui_child.setupUi(new_tab)  
    #             # ðŸ”¹ LÆ°u instance cá»§a tá»«ng model vÃ o dict
    #             self.ui_instances[(j[1], model_index + 1)] = self.ui_child
    #             # ðŸ”¹ GÃ¡n sá»± kiá»‡n
    #             self.ui_child.pushButton.clicked.connect(lambda _, u=uic_process: u.browse_file())
    #             self.ui_child.pushButton_2.clicked.connect(lambda _, u=uic_process: u.load_model())
    #             self.ui_child.pushButton_6.clicked.connect(lambda _, u=uic_process: u.save_data())
    #             self.ui_child.pushButton_5.clicked.connect(lambda _, u=uic_process: u.event_clock(1, 1, self.dict, self.tabWidget, self.ui_instances))

    #             self.tabWidget_2.addTab(new_tab, f"Model {model_index + 1}")
    #             self.product_code_forms.append(new_tab)

class intermediate_layer:
    def __init__(self,i_code,db,connect_db):
        # app = QtWidgets.QApplication(sys.argv)
        self.i_code = i_code
        self.db=db
        self.connect_db = connect_db
        self.MainWindow = QtWidgets.QMainWindow()
        ui = Ui_MainWindow(self.i_code,self.db,self.connect_db)
        ui.setupUi(self.MainWindow)
        # self.MainWindow.show()
        self.MainWindow.showMaximized()
        # sys.exit(app.exec_())
    
# intermediate_layer()